apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "zabbix.fullname" . }}
  labels:
    {{- include "zabbix.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "zabbix.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "zabbix.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
      - name: "remove-lost-found"
        image: "busybox:1.25.0"
        imagePullPolicy: IfNotPresent
        command:
        - "rm"
        - "-fr"
        - "/var/lib/mysql/lost+found"
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
      containers:
      - name: database
        image: "percona/percona-xtradb-cluster:5.7.19"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        command:
        - "/bin/bash"
        - "/startup-scripts/entrypoint.sh"
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
        {{- if .Values.mysqlAllowEmptyPassword }}
        - name: MYSQL_ALLOW_EMPTY_PASSWORD
          value: "true"
        {{- else }}
        - name: MYSQL_ROOT_PASSWORD
          value: {{ default "zabbix" .Values.mysqrootpass | quote }}
        - name: MYSQL_PASSWORD
          value: {{ default "zabbix" .Values.mysqpass | quote }}
        {{- end }}
        - name: XTRABACKUP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "zabbix.fullname" . }}
              key: xtrabackup-password
        - name: MYSQL_USER
          value: {{ default "" .Values.mysqlUser | quote }}
        - name: ALLOW_ROOT_FROM
          value: {{ .Values.allowRootFrom | quote }}
        - name: CLUSTER_NAME
          value: {{ include "zabbix.fullname" . }}
        - name: SHORT_CLUSTER_NAME
          value: {{ include "zabbix.fullname" . }}-cl
        - name: K8S_SERVICE_NAME
          value: {{ include "zabbix.fullname" . }}-repl
        - name: PXC_STRICT_MODE
          value: {{ default "ENFORCING" .Values.pxc_strict_mode | quote }}
        - name: DEBUG
          value: "true"
        ports:
        - name: mysql
          containerPort: 3306
        - name: galera-repl
          containerPort: 4567
        - name: state-transfer
          containerPort: 4568
        - name: state-snapshot
          containerPort: 4444
        livenessProbe:
          exec:
            command:
              - "/bin/bash"
              - "-c"
              - "mysqladmin ping || test -e /var/lib/mysql/sst_in_progress"
          initialDelaySeconds: 30
          timeoutSeconds: 2
        readinessProbe:
          exec:
            command: ["mysql", "-h", "127.0.0.1", "-e", "SELECT 1"]
          initialDelaySeconds: 30
          timeoutSeconds: 2
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
        - name: mysql-startup-scripts
          mountPath: /startup-scripts
        - name: mysql-config-files
          mountPath: /etc/mysql/conf.d
        - name: slash-root
          mountPath: /root
        - name: var-log
          mountPath: /var/log
        {{- if .Values.ssl.enabled }}
        - name: certificates
          mountPath: /ssl
        {{- end }}
      {{ if .Values.logTail }}
      - name: "logs"
        image: "busybox:1.25.0"
        imagePullPolicy: IfNotPresent
        command:
        - "tail"
        - "-f"
        - "/var/log/mysqld.log"
        volumeMounts:
        - name: var-log
          mountPath: /var/log
      {{ end }}
      volumes:
      - name: slash-root
        emptyDir: {}
      - name: var-log
        emptyDir: {}
      - name: mysql-config-files
        configMap:
          name: {{ include "zabbix.fullname" . }}-config-files
      - name: mysql-startup-scripts
        configMap:
          name: {{ include "zabbix.fullname" . }}-startup-scripts
      {{- if not .Values.persistence.enabled }}
      - name: mysql-data
        emptyDir: {}
      {{- end -}}
      {{- if .Values.ssl.enabled }}
      - name: certificates
        secret:
          secretName: {{ .Values.ssl.secret }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end -}}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end -}}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: mysql-data
    spec:
      accessModes: [{{ .Values.persistence.accessMode | quote }}]
      storageClassName: longhorn
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
  {{- end -}}
